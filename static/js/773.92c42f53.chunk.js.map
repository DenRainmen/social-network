{"version":3,"file":"static/js/773.92c42f53.chunk.js","mappings":"8KACA,EAA0B,yB,UCA1B,EAAgC,gCAAhC,EAAiF,iCAAjF,EAAyH,uBAAzH,EAAyJ,yBAAzJ,EAA6L,2BCA7L,EAAuC,sCAAvC,EAAsG,wCAAtG,EAAqJ,sBAArJ,EAAyL,6B,UCkBzL,EAXqC,SAAC,GAAuB,IAAtBA,EAAqB,EAArBA,UAAWC,EAAU,EAAVA,KAC9C,OACI,gBAAKC,UAAyB,WAAdF,EAAyBG,EAA+BA,EAAxE,UACI,gBAAKD,UAAyB,WAAdF,EAAyBG,EAAaA,EAAtD,SACKF,O,wCCiBXG,GAAgBC,EAAAA,EAAAA,IAAU,IAC1BC,GAAgBC,EAAAA,EAAAA,IAAU,GAsB1BC,GAAmBC,EAAAA,EAAAA,GAAwB,CAC7CC,KAAM,YADeD,EAjBgC,SAACE,GACtD,OACI,kBAAMC,SAAUD,EAAME,aAAcX,UAAWC,EAA/C,WACI,0BACI,SAACW,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GACXC,KAAM,UACNC,YAAa,qBACbhB,UAAWC,EACXgB,SAAU,CAACC,EAAAA,GAAUhB,EAAeE,QAG/C,0BACI,mBAAQJ,UAAWC,EAAnB,0BAShB,EA/CwC,SAAC,GAGO,IAFHkB,EAEE,EAFFA,aACAC,EACE,EADFA,WAQzC,OACI,iBAAKpB,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKkB,EAAaE,KAAI,SAAAC,GAAG,OAAI,SAAC,EAAD,CAAsBxB,UAAWwB,EAAIxB,UAAWC,KAAMuB,EAAIvB,MAA5CuB,EAAIC,UAE/C,SAACjB,EAAD,CAAkBI,SAVJ,SAACc,GACnBC,QAAQC,IAAIF,GACZJ,EAAWI,EAASG,gB,6BCkB5B,GAAeC,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAhBoB,SAACC,GACrB,MAAO,CACHX,aAAcW,EAAMC,YAAYZ,iBAKb,SAACa,GACxB,MAAO,CACHZ,WAAY,SAACO,GACTK,GAASC,EAAAA,EAAAA,GAAiBN,SAOlCO,EAAAA,EAFJ,CAGEC,GCpCF,EAA8B,iCCA9B,EAAyB,uBAAzB,EAAyD,uBAAzD,EAAyF,uB,UCmBzF,EAXoC,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,KAAMrB,EAAkB,EAAlBA,KAAMsB,EAAY,EAAZA,OAC9C,OACI,iBAAKrC,UAAWC,EAAhB,WACI,0BACI,gBAAKD,UAAWC,EAAcqC,IAAKD,EAAQE,IAAK,cAEpD,SAAC,KAAD,CAASC,GAAE,mBAAcJ,GAAQK,gBAAiBxC,EAAlD,SAAiEc,QCgB7E,GAF6Bc,EAAAA,EAAAA,KAXL,SAACC,GACrB,MAAO,CACHY,YAAaZ,EAAMC,YAAYW,gBAKZ,SAACV,GACxB,MAAO,KAGkBH,EApBc,SAAC,GAAmB,IAAlBa,EAAiB,EAAjBA,YACzC,OAAO,gBAAK1C,UAAWC,EAAhB,SACFyC,EAAYrB,KAAI,SAAAsB,GAAG,OAAI,SAAC,EAAD,CAAqBP,KAAMO,EAAIpB,GAAIR,KAAM4B,EAAI5B,KAAMsB,OAAQM,EAAIN,QAAlDM,EAAIpB,YCKjD,EATsC,WAClC,OACI,iBAAKvB,UAAWC,EAAhB,WACI,SAAC,EAAD,KACA,SAAC2C,EAAD","sources":["webpack://social-network/./src/components/Dialogs/Dialogs.module.css?dc1e","webpack://social-network/./src/components/Dialogs/Messages/Messages.module.css?6fa9","webpack://social-network/./src/components/Dialogs/Messages/message/Message.module.css?e2ca","components/Dialogs/Messages/message/Message.tsx","components/Dialogs/Messages/Messages.tsx","components/Dialogs/Messages/MessagesContainer.tsx","webpack://social-network/./src/components/Dialogs/DialogItems/DialogItems.module.css?770c","webpack://social-network/./src/components/Dialogs/DialogItems/Dialog/Dialog.module.css?635e","components/Dialogs/DialogItems/Dialog/Dialog.tsx","components/Dialogs/DialogItems/DialogItems.tsx","components/Dialogs/Dialogs.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__Nm5mS\"};","// extracted by mini-css-extract-plugin\nexport default {\"messagesBlock\":\"Messages_messagesBlock__uAsN7\",\"messageWrapper\":\"Messages_messageWrapper__99FzB\",\"form\":\"Messages_form__uILUq\",\"button\":\"Messages_button__D3QmU\",\"textArea\":\"Messages_textArea__f5hc4\"};","// extracted by mini-css-extract-plugin\nexport default {\"userMessageContainer\":\"Message_userMessageContainer__8V1CA\",\"friendMessageContainer\":\"Message_friendMessageContainer__g92vi\",\"text\":\"Message_text__B3N6N\",\"userMessage\":\"Message_userMessage__edR0x\"};","import React, {FC} from 'react';\nimport style from  './Message.module.css'\nimport {NameStyleMessageType} from \"../../../../redux/dialog-reducer\";\n\nexport type MessageTypeProps = {\n    nameStyle: NameStyleMessageType\n    text: string\n}\nconst Message:FC<MessageTypeProps> = ({nameStyle, text}) => {\n    return (\n        <div className={nameStyle === 'friend' ? style.friendMessageContainer : style.userMessageContainer}>\n            <div className={nameStyle === 'friend' ? style.text : style.userMessage }>\n                {text}\n            </div>\n\n        </div>\n    )\n}\n\nexport default Message;","import React, {FC} from 'react';\nimport style from './Messages.module.css';\nimport Message from \"./message/Message\";\nimport {MessagesPropsType} from \"./MessagesContainer\";\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {TextArea} from \"../../common/FormsControl/FormControls\";\nimport {maxLength, minLength, required} from \"../../../utils/validators/validators\";\n\n\nconst Messages: FC<MessagesPropsType> = ({\n                                             messagesData,\n                                             addMessage,\n                                         }) => {\n\n    const addNewMessage = (formData: FormDataType) => {\n        console.log(formData)\n        addMessage(formData.message)\n    }\n    // if (!isAuthUser) return <Redirect to={'./login'} />\n    return (\n        <div className={style.messagesBlock}>\n            <div className={style.messageWrapper}>\n                {messagesData.map(mes => <Message key={mes.id} nameStyle={mes.nameStyle} text={mes.text}/>)}\n            </div>\n            <MessageReduxForm onSubmit={addNewMessage}/>\n        </div>\n    );\n};\n\nconst maxLengthPost = maxLength(30)\nconst minLengthPost = minLength(5)\n\ntype FormDataType = {\n    message: string\n}\nconst MessageForm: FC<InjectedFormProps<FormDataType>> = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} className={style.form}>\n            <div>\n                <Field component={TextArea}\n                       name={\"message\"}\n                       placeholder={\"Enter your message\"}\n                       className={style.textArea}\n                       validate={[required, maxLengthPost, minLengthPost]}\n                />\n            </div>\n            <div>\n                <button className={style.button}>Send</button>\n            </div>\n        </form>\n    )\n}\nconst MessageReduxForm = reduxForm<FormDataType>({\n    form: \"messages\"\n})(MessageForm)\n\nexport default Messages;","import React, {FC} from 'react';\nimport {addMessageAction, MessageType} from \"../../../redux/dialog-reducer\";\nimport Messages from \"./Messages\";\nimport {compose, Dispatch} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../../../redux/redux-store\";\nimport {Redirect} from \"react-router-dom\";\nimport withAuthRedirect from \"../../../hoc/withAuthRedirect\";\n\nexport type MessagesPropsType = MapStateToProps & MapDispatchToPropsType\n\ntype MapStateToProps = {\n    messagesData: Array<MessageType>\n\n}\ntype MapDispatchToPropsType = {\n    addMessage: (message: string) => void\n}\n\nconst mapStateToProps = (state: AppStateType): MapStateToProps => {\n    return {\n        messagesData: state.dialogsPage.messagesData,\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\n    return {\n        addMessage: (message) => {\n            dispatch(addMessageAction(message))\n        }\n    }\n}\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Messages)\n\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogItems\":\"DialogItems_dialogItems__0H3NK\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Dialog_dialog__l9Npc\",\"active\":\"Dialog_active__zpBtA\",\"avatar\":\"Dialog_avatar__eDpWs\"};","import React, {FC} from \"react\";\nimport style from \"./Dialog.module.css\";\nimport {NavLink} from \"react-router-dom\";\n\nexport type DialogTypeProps = {\n    path: number\n    name: string\n    avatar: string\n}\nconst Dialog: FC<DialogTypeProps> = ({path, name, avatar}) => {\n    return (\n        <div className={style.dialog}>\n            <div>\n                <img className={style.avatar} src={avatar} alt={'avatar'} />\n            </div>\n            <NavLink to={`/message/${path}`} activeClassName={style.active}>{name}</NavLink>\n        </div>\n    )\n}\n\nexport default Dialog;","import React, {FC} from 'react';\nimport style from './DialogItems.module.css'\nimport Dialog from \"./Dialog/Dialog\";\nimport {connect} from \"react-redux\";\nimport {Dispatch} from \"redux\";\nimport {AppStateType} from \"../../../redux/redux-store\";\nimport {DialogType} from \"../../../redux/dialog-reducer\";\n\ntype DialogsItemsProps = MapStateToPropsType & MapDispatchToProps\nconst DialogItems: FC<DialogsItemsProps> = ({dialogsData}) => {\n    return <div className={style.dialogItems}>\n        {dialogsData.map(obj => <Dialog key={obj.id} path={obj.id} name={obj.name} avatar={obj.avatar}/>)}\n    </div>\n};\n\ntype MapStateToPropsType = {\n    dialogsData: DialogType[]\n}\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        dialogsData: state.dialogsPage.dialogsData\n    }\n}\n\ntype MapDispatchToProps = {}\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToProps => {\n    return {}\n}\n\nconst DialogItemsContainer = connect(mapStateToProps, mapDispatchToProps)(DialogItems)\n\nexport default DialogItemsContainer;","import React, {FC} from 'react';\nimport style from './Dialogs.module.css'\nimport DialogItems from \"./DialogItems/DialogItems\";\nimport MessagesContainer from \"./Messages/MessagesContainer\";\nimport DialogItemsContainer from \"./DialogItems/DialogItems\";\n\ntype DialogsPropsType = {}\nconst Dialogs: FC<DialogsPropsType> = () => {\n    return (\n        <div className={style.dialogs}>\n            <DialogItemsContainer/>\n            <MessagesContainer/>\n        </div>\n    );\n};\n\nexport default Dialogs;"],"names":["nameStyle","text","className","style","maxLengthPost","maxLength","minLengthPost","minLength","MessageReduxForm","reduxForm","form","props","onSubmit","handleSubmit","Field","component","TextArea","name","placeholder","validate","required","messagesData","addMessage","map","mes","id","formData","console","log","message","compose","connect","state","dialogsPage","dispatch","addMessageAction","withAuthRedirect","Messages","path","avatar","src","alt","to","activeClassName","dialogsData","obj","MessagesContainer"],"sourceRoot":""}